apiVersion: v1
kind: ConfigMap
metadata:
  name: acme-sync-script
  namespace: kube-system
data:
  sync.sh: |
    #!/bin/sh
    set -e

    ACME_FILE="/data/acme.json"
    SECRET_NAME="letsencrypt-cert"
    NAMESPACE={{ .Values.namespace }}
    DOMAIN={{ .Values.domain }}

    if [ ! -f "$ACME_FILE" ]; then
      echo "ERROR: $ACME_FILE not found"
      exit 1
    fi

    echo "Extracting cert for domain: $DOMAIN"

    CERT=$(jq -r --arg domain "$DOMAIN" '.default.Certificates[] | select(.domain.main == $domain) | .certificate' "$ACME_FILE" | base64 -d)
    KEY=$(jq -r --arg domain "$DOMAIN" '.default.Certificates[] | select(.domain.main == $domain) | .key' "$ACME_FILE" | base64 -d)

    if [ -z "$CERT" ] || [ -z "$KEY" ] || [ "$CERT" = "null" ] || [ "$KEY" = "null" ]; then
      echo "ERROR: No certificate found for domain $DOMAIN"
      exit 1
    fi

    echo "$CERT" > /tmp/tls.crt
    echo "$KEY" > /tmp/tls.key

    echo "Updating secret $SECRET_NAME in namespace $NAMESPACE ..."
    kubectl -n $NAMESPACE create secret tls $SECRET_NAME \
      --cert=/tmp/tls.crt \
      --key=/tmp/tls.key \
      --dry-run=client -o yaml | kubectl apply -f -
